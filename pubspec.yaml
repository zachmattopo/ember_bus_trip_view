name: ember_bus_trip_view
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  # Fancy pre-built animations that can easily be integrated into any Flutter application.
  # https://pub.dev/packages/animations
  animations: ^2.0.11

  # A Flutter library that makes animation easier.
  # https://pub.dev/packages/animator
  animator: ^3.3.0

  # A predictable state management library that helps implement the BLoC design pattern.
  # https://pub.dev/packages/bloc
  bloc: ^9.0.0

  # A powerful Http client for Dart.
  # https://pub.dev/packages/dio
  dio: ^5.8.0+1

  # A Dart package that helps to implement value based equality without needing to explicitly override == and hashCode.
  # https://pub.dev/packages/equatable
  equatable: ^2.0.7

  # Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern.
  # Built to be used with the bloc state management package.
  # https://pub.dev/packages/flutter_bloc
  flutter_bloc: ^9.1.0

  # Customize Flutter's default white native splash screen with background color and splash image.
  # https://pub.dev/packages/flutter_native_splash
  flutter_native_splash: ^2.4.5

  # A tidy utility to handle offline/online connectivity like a Boss.
  # https://pub.dev/packages/flutter_offline
  flutter_offline: ^4.0.0

  # A Flutter plugin for integrating Google Maps in iOS and Android applications.
  # https://pub.dev/packages/google_maps_flutter
  google_maps_flutter: ^2.10.1

  # Contains code to deal with internationalized/localized messages, date and number formatting and parsing,
  # bi-directional text, and other internationalization issues.
  # https://pub.dev/packages/intl
  intl: ^0.19.0

  # Loading animation or loading spinner or loader.
  # https://pub.dev/packages/loading_animation_widget
  loading_animation_widget: ^1.3.0

  # A powerful & easy to use timeline package for Flutter.
  # https://pub.dev/packages/timelines_plus
  timelines_plus: ^1.0.6

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

  # A testing library which makes it easy to test blocs. Built to be used with the bloc state management package.
  # https://pub.dev/packages/bloc_test
  bloc_test: ^10.0.0

  # A Dart mock library which simplifies mocking with null safety support and no manual mocks or code generation.
  # https://pub.dev/packages/mocktail
  mocktail: ^1.0.4

  # A full featured library for writing and running Dart tests across platforms.
  # https://pub.dev/packages/test
  test: ^1.25.15

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/ember_logo.png
    - assets/location_arrow_icon.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Montserrat
      fonts:
        - asset: assets/fonts/Montserrat-Regular.ttf
        - asset: assets/fonts/Montserrat-Medium.ttf
          weight: 500
        - asset: assets/fonts/Montserrat-Bold.ttf
          weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
